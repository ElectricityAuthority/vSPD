GAMS 42.5.0  cf11b917 Mar 30, 2023          WEX-WEI x86 64bit/MS Windows - 07/28/23 13:59:01 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  *=====================================================================================
   2  * Name:               vSPDPeriod.gms
   3  * Function:           Establish the set of periods selected to be solved in vSPD
   4  *                     and unload to gdx file for later use in vSPDsolve.gms
   5  * Developed by:       Electricity Authority, New Zealand
   6  * Source:             https://github.com/ElectricityAuthority/vSPD
   7  *                     https://www.emi.ea.govt.nz/Tools/vSPD
   8  * Contact:            Forum: https://www.emi.ea.govt.nz/forum/
   9  *                     Email: emi@ea.govt.nz
  10  * Last modified on:   1 Nov 2022
  11  *
  12  *=====================================================================================
  13   
INCLUDE    C:\vSPD\vSPD\Programs\vSPDsettings.inc
  15  *+++ vSPD settings +++
  18   
  19  *+++ Paths +++
  21   
  26   
  28   
  29   
  30  *+++ Model +++
  31  Scalar sequentialSolve                   / 0 / ;   ! Vectorisation: Yes <-> i_SequentialSolve: 0
  32  Scalar disconnectedNodePriceCorrection   / 1 / ;
  33  Scalar tradePeriodReports                / 1 / ;   ! Specify 1 for reports at trading period level, 0 otherwise
  34   
  35   
  36  *+++ Network +++
  37  Scalar useACLossModel                    / 1 /    ;
  38  Scalar useHVDCLossModel                  / 1 /    ;
  39  Scalar useACBranchLimits                 / 1 /    ;
  40  Scalar useHVDCBranchLimits               / 1 /    ;
  41  Scalar resolveCircularBranchFlows        / 1 /    ;
  42  Scalar resolveHVDCNonPhysicalLosses      / 1 /    ;
  43  Scalar resolveACNonPhysicalLosses        / 0 /    ;   ! Placeholder for future code development
  44  Scalar circularBranchFlowTolerance       / 1e-4 / ;
  45  Scalar nonPhysicalLossTolerance          / 1e-6 / ;
  46  Scalar useBranchFlowMIPTolerance         / 1e-6 / ;
  47   
  48   
  49  *+++ Constraints +++
  50  Scalar useReserveModel                   / 1 /    ;
  51  Scalar suppressMixedConstraint           / 0 /    ;   ! No longer used since Mixed MIP Constraints no longer exists
  52  Scalar mixedMIPtolerance                 / 1e-6 / ;   ! No longer used since Mixed MIP Constraints no longer exists
  53   
  54   
  55  *+++ Solver +++
  56  Scalar LPtimeLimit                       / 3600 / ;
  57  Scalar LPiterationLimit                  / 2000000000 / ;
  58  Scalar MIPtimeLimit                      / 3600 / ;
  59  Scalar MIPiterationLimit                 / 2000000000 / ;
  60  Scalar MIPoptimality                     / 0 / ;
  63   
  64   
  65  *+++ Various switches +++
INCLUDE    C:\vSPD\vSPD\Programs\vSPDcase.inc
  69   
  70  * If input file does not exist then go to the next input file
  72   
  73   
  74  *===============================================================================
  75  * 1. Initialize set and data
  76  *===============================================================================
  77  Sets
  78  ca                      'Set of caseID'
  79  tp                      'Set of trading periods'
  80  dt                      'Set of datetime'
  81  rundt                   'Set of Rundatetime'
  82  caseName                'Set of CaseName'
  83   
  84  case2dt2tp(ca<,dt<,tp<) 'Mapping caseID to datetime and to tp'
  85  case2rundt(ca,rundt<)   'Mapping caseID to rundatetime'
  86  case2Name(ca,caseName<) 'Mapping caseID to case name'
  87   
  88   
  89  dt2tp(dt,tp)            'Mapping datetime to trading periods'
  90   
  91  sca(ca)                 'caseID to be solved'
  92  stp(tp)                 'Trading periods to be solved'
  93  sdt(dt)                 'Date time to be solved'
  94  srt(rundt)           'RunDateTime of cases to be solved'
  95  scn(caseName)     'Name of cases to be solved'
  96   
  97   
  98  sdt2tp(dt,tp)           'Mapping solved datetime to trading periods'
  99  scase2dt(ca,dt)         ''
 100  scase2Name(ca,caseName) ''
 101  scase2rundt(ca,rundt)   ''
 102   
 103  ;
 104  alias (tp,tp1);
 105   
 106  Parameter
 107  gdxDate(*,*)                        'day, month, year of trade date'
 108  ;
 109   
GDXIN   C:\vSPD\vSPD\Input\RTD_20230601_new.gdx
--- LOAD  gdxDate = 3:gdxDate
--- LOAD  case2dt2tp = 8:i_dateTimeTradePeriodMap
--- LOAD  case2rundt = 2:i_runDateTime
--- LOAD  case2Name = 1:caseName
 116   
 117  *===============================================================================
 118  * 2. Establish which trading periods are to be solved
 119  *===============================================================================
 120  Sets
 121  alp            'All trading periods to be solved'  / All /
 122  tmp            'Temporary list of trading period to be solved'
INCLUDE    C:\vSPD\vSPD\Programs\vSPDtpsToSolve.inc
      a. to solve all trading periods
      /  
      All
      /  
       
      b. to solve trading periods 3 and 6
      /                /        
      TP3      Or      TP3, TP6 
      TP6              /        
      /                         
 136  *============================================= // ==========================================
 137   
 138  /
 139  '01-JUN-2023 00:30'
 140  /
 141  ;
 142  sca(ca)       = no ;
 143  stp(tp)       = no ;
 144  sdt(dt)       = no ;
 145  srt(rundt)    = no ;
 146  scn(caseName) = no;
 147   
 148  stp(tp) $ sum[ tmp, diag(tp,tmp)] = yes ;
 149  sdt(dt) $ sum[ tmp, diag(dt,tmp)] = yes ;
 150   
 151  stp(tp) $ sum[ tmp, diag(tmp,'All')] = yes ;
 153   
 154   
 155  sdt(dt) $ sum[ (ca,stp(tp)) $ case2dt2tp(ca,dt,tp), 1 ] = yes ;
 156  stp(tp) $ sum[ (ca,sdt(dt)) $ case2dt2tp(ca,dt,tp), 1 ] = yes ;
 157   
 158  sdt2tp(sdt(dt),stp(tp)) = yes $ sum[ca $ case2dt2tp(ca,dt,tp),1] ;
 159   
 160  sca(ca)  = yes $ sum[ (sdt(dt),stp(tp)) $ case2dt2tp(ca,dt,tp),1] ;
 161  scase2dt(ca,dt) = yes $ sum[(sca(ca),sdt(dt),stp(tp)) $ case2dt2tp(ca,dt,tp),1] ;
 162   
 163  scn(caseName) $ sum[sca(ca) $ case2Name(ca,caseName), 1]  = yes ;
 164  scase2Name(ca,caseName) = yes $ sum[ (sca(ca),scn(caseName)) $ case2Name(ca,caseName), 1 ] ;
 165   
 166  srt(rundt) $ sum[sca(ca) $ case2rundt(ca,rundt), 1]  = yes ;
 167  scase2rundt(ca,rundt) = yes $ sum[ (sca(ca),srt(rundt)) $ case2rundt(ca,rundt), 1] ;
 168   
 169   
 170   
 171  execute_unload 'C:\vSPD\vSPD\Programs\\vSPDperiod.gdx'
 172    sca    = i_caseID
 173    stp    = i_tradePeriod
 174    sdt    = i_dateTime
 175    srt    = i_runDateTime
 176    scn    = i_caseName
 177    sdt2tp      = i_DateTimeTradePeriod
 178    scase2dt    = i_caseDateTime
 179    scase2Name  = i_caseIdName
 180    scase2rundt = i_case2rundt
 181    ;
 182   
GAMS 42.5.0  cf11b917 Mar 30, 2023          WEX-WEI x86 64bit/MS Windows - 07/28/23 13:59:01 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\vSPD\vSPD\Programs\vSPDperiod.gms
     2       14 INCLUDE        1      14  .C:\vSPD\vSPD\Programs\vSPDsettings.inc
     3       67 INCLUDE        1      15  .C:\vSPD\vSPD\Programs\vSPDcase.inc
     4       71 IF EXIST       1      18  C:\vSPD\vSPD\Input\RTD_20230601_new.gdx
     5      110 GDXIN          1      57  C:\vSPD\vSPD\Input\RTD_20230601_new.gdx
     6      123 INCLUDE        1      70  .C:\vSPD\vSPD\Programs\vSPDtpsToSolve.inc


COMPILATION TIME     =        0.016 SECONDS      3 MB  42.5.0 cf11b917 WEX-WEI
GAMS 42.5.0  cf11b917 Mar 30, 2023          WEX-WEI x86 64bit/MS Windows - 07/28/23 13:59:01 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


EXECUTION TIME       =        0.000 SECONDS      4 MB  42.5.0 cf11b917 WEX-WEI


USER: Small MUD-5 User License                       G220916|0002CO-GEN
      Electricity Authority - Te Mana Hiko,                  DC5643-S10


**** FILE SUMMARY

Input      C:\vSPD\vSPD\Programs\vSPDperiod.gms
Output     C:\vSPD\vSPD\Programs\vSPDperiod.lst
